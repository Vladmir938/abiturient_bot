import re
from telebot.types import Message
from google import genai
from google.genai.types import Tool, GenerateContentConfig, GoogleSearch
from bot_app.config import GEMINI_API_KEY, GEMINI_MODEL_ID, GEMINI_MIN_QUESTION_LENGTH, GEMINI_MAX_QUESTION_LENGTH
from bot_app.keyboards import main_menu_keyboard

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Gemini
if not GEMINI_API_KEY:
    print("–û–®–ò–ë–ö–ê: API –∫–ª—é—á –¥–ª—è Gemini –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ config.py!")
    gemini_client = None
else:
    try:
        gemini_client = genai.Client(api_key=GEMINI_API_KEY)
        google_search_tool = Tool(
            google_search=GoogleSearch()
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞ Gemini: {e}")
        gemini_client = None


# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è, –æ–∂–∏–¥–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—Ç–∞ –æ—Ç Gemini
# {user_id: True/False}
user_is_waiting_for_gemini = {}

def is_text_safe(text: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–æ–ª—å–∫–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ (–±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã, –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è)."""
    allowed_pattern = re.compile(r"^[–∞-—è–ê-–Ø—ë–Åa-zA-Z0-9\s.,!?;:'\"()\-‚Äì‚Äî]+$")
    return bool(allowed_pattern.match(text))


def process_gemini_question(bot, message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ Gemini –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç."""
    if not gemini_client:
        bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.",
                               reply_markup=main_menu_keyboard())
        bot.delete_state(message.from_user.id, message.chat.id)
        return

    question = message.text.strip()

    if user_is_waiting_for_gemini.get(message.from_user.id, False):
        bot.send_message(message.from_user.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤–æ–ø—Ä–æ—Å, –ø—Ä–µ–∂–¥–µ —á–µ–º –∑–∞–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–π.")
        return

    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç)
    if message.content_type != 'text':
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                     reply_markup=main_menu_keyboard())
        bot.delete_state(message.from_user.id, message.chat.id)
        return

    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è
    if not (GEMINI_MIN_QUESTION_LENGTH <= len(question) <= GEMINI_MAX_QUESTION_LENGTH):
        bot.reply_to(message,
                     f"–í–∞—à –≤–æ–ø—Ä–æ—Å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π. "
                     f"–î–æ–ø—É—Å—Ç–∏–º–∞—è –¥–ª–∏–Ω–∞: –æ—Ç {GEMINI_MIN_QUESTION_LENGTH} –¥–æ {GEMINI_MAX_QUESTION_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤.",
                     reply_markup=main_menu_keyboard())
        bot.delete_state(message.from_user.id, message.chat.id)  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        return

    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã (–±–∞–∑–æ–≤–∞—è)
    if not is_text_safe(question):
        bot.reply_to(message,
                     "–í–∞—à –≤–æ–ø—Ä–æ—Å —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, —ç–º–æ–¥–∑–∏ –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∑–Ω–∞–∫–∏). "
                     "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è.",
                     reply_markup=main_menu_keyboard())
        bot.delete_state(message.from_user.id, message.chat.id)
        return

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∫ –≤–æ–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # "–ó–∞–±–≥—É. –û—Ç–≤–µ—Ç –≤—ã–≤–æ–¥–∏ –≤ markdown —Ä–∞–∑–º–µ—Ç–∫–µ" - —ç—Ç–æ —Ö–æ—Ä–æ—à–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    full_prompt = f"""
    {question}

    –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –∫–∞—Å–∞—Ç—å—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –ó–∞–±–∞–π–∫–∞–ª—å—Å–∫–æ–≥–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ (–ó–∞–±–ì–£) –≤ –≥–æ—Ä–æ–¥–µ –ß–∏—Ç–∞. 

    –°—Ç—Ä–æ–≥–æ —Å–æ–±–ª—é–¥–∞–π —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞:
    1. –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å:
       - –¢–µ–º–∞–º–∏, –Ω–∞–ø—Ä—è–º—É—é —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ó–ê–ë–ì–£

    2. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –ù–ï –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –ó–∞–±–ì–£, –æ—Ç–≤–µ—á–∞–π —Å—Ç—Ä–æ–≥–æ:
       "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ó–∞–±–∞–π–∫–∞–ª—å—Å–∫–∏–º –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–º —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–æ–º."

    3. –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
       - –ß–µ—Ç–∫–∏–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
       - –ë–µ–∑ –ª–∏—à–Ω–∏—Ö –≤—Å—Ç—É–ø–ª–µ–Ω–∏–π
       - –° —Ñ–∞–∫—Ç–∞–º–∏ –∏ —Ü–∏—Ñ—Ä–∞–º–∏ (–µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã)
       - –° —É–∫–∞–∑–∞–Ω–∏–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —É—á–µ–±–Ω–æ–≥–æ –≥–æ–¥–∞
       - HTML —Ä–∞–∑–º–µ—Ç–∫–∞ —Ç–æ–ª—å–∫–æ:
        <b>–∂–∏—Ä–Ω—ã–π</b>
        <i>–∫—É—Ä—Å–∏–≤</i>
        <u>–ø–æ–¥—á—ë—Ä–∫–Ω—É—Ç—ã–π</u>
        <s>–∑–∞—á—ë—Ä–∫–Ω—É—Ç—ã–π</s>
        <code>–º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π (–¥–ª—è –∫–æ–¥–∞)</code>
        <a href="URL">–≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞</a>
    """

    user_is_waiting_for_gemini[message.chat.id] = True
    processing_msg = bot.send_message(message.chat.id, "ü§ñ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à –∑–∞–ø—Ä–æ—Å...")

    try:
        # –î–ª—è genai.GenerativeModel().generate_content_async()
        # response = await gemini_client.generate_content_async(full_prompt) # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≤—ã–∑–æ–≤

        # –î–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ genai.GenerativeModel().generate_content()
        # (pyTelegramBotAPI –æ–±—ã—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö, –µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å asyncio —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ)

        response = gemini_client.models.generate_content(
            model=GEMINI_MODEL_ID,
            contents=full_prompt,
            config=GenerateContentConfig(
                tools=[google_search_tool],
                response_modalities=["TEXT"],
            )
        )

        ai_response_text = ""
        if response.candidates[0].content.parts:
            for each in response.candidates[0].content.parts:
                ai_response_text += each.text
        else:
            ai_response_text = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–Ω—è—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å."
            print(f"–Ø —Å–ª–æ–º–∞–ª—Å—è: {response}")

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–î—É–º–∞—é..."
        bot.delete_message(message.chat.id, processing_msg.message_id)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        # parse_mode='MarkdownV2' –µ—Å–ª–∏ Gemini –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç MarkdownV2, –∏–ª–∏ 'Markdown' –µ—Å–ª–∏ —Å—Ç–∞—Ä—ã–π Markdown.
        # –ï—Å–ª–∏ Gemini –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç, parse_mode –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å HTML –¥–ª—è —Å–≤–æ–µ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
        # –î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, –µ—Å–ª–∏ –Ω–µ —É–≤–µ—Ä–µ–Ω—ã –≤ —Ä–∞–∑–º–µ—Ç–∫–µ –æ—Ç Gemini, –ª—É—á—à–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞–∫ –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç
        # –∏–ª–∏ –æ—á–∏—â–∞—Ç—å –æ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –æ–ø–∞—Å–Ω–æ–π —Ä–∞–∑–º–µ—Ç–∫–∏.
        # –ü–æ–∫–∞ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ Gemini –≤–µ—Ä–Ω–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π Markdown (–∏–ª–∏ –º—ã –µ–≥–æ —Å–∞–º–∏ –ø–æ—Ç–æ–º –æ–±—Ä–∞–±–æ—Ç–∞–µ–º)
        bot.send_message(message.chat.id, ai_response_text, parse_mode='HTML',
                               reply_markup=main_menu_keyboard())

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Gemini API –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞: {e}")
        try:  # –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ "–î—É–º–∞—é...", –¥–∞–∂–µ –µ—Å–ª–∏ –±—ã–ª–∞ –æ—à–∏–±–∫–∞
            bot.delete_message(message.chat.id, processing_msg.message_id)
        except:
            pass
        bot.send_message(message.chat.id,
                               "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                               reply_markup=main_menu_keyboard())
    finally:
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
        user_is_waiting_for_gemini[message.chat.id] = False